// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackSpace.DBUtil;

#nullable disable

namespace TrackSpace.Migrations
{
    [DbContext(typeof(TrackspaceContext))]
    partial class TrackspaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb3_general_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb3");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TrackSpace.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("name");

                    b.HasKey("IdCategory")
                        .HasName("PRIMARY");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Club", b =>
                {
                    b.Property<int>("IdClub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idClub");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdClub"));

                    b.Property<string>("ClubCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char(3)")
                        .HasColumnName("clubCode")
                        .IsFixedLength();

                    b.Property<short>("CompetitorNumber")
                        .HasColumnType("smallint")
                        .HasColumnName("competitorNumber");

                    b.Property<string>("Contact")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contact");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("IdClub")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ClubCode" }, "KodKluba_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "IdUser" }, "fk_KLUB_ADMINISTRATOR_KLUBA1_idx");

                    b.ToTable("club", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.ClubAdmin", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("club_admin", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Competition", b =>
                {
                    b.Property<int>("IdCompetition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompetition");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCompetition"));

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("description");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("PostNumber")
                        .HasColumnType("int")
                        .HasColumnName("postNumber");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime")
                        .HasColumnName("start");

                    b.HasKey("IdCompetition")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PostNumber" }, "fk_TAKMICENJE_LOKACIJA1_idx");

                    b.HasIndex(new[] { "IdUser" }, "fk_TAKMICENJE_ODGANIZATOR_TAKMICENJA1_idx");

                    b.ToTable("competition", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitionOrganizer", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("competition_organizer", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Competitor", b =>
                {
                    b.Property<int>("IdCompetitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompetitor");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCompetitor"));

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("idClub");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Surname")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("surname");

                    b.HasKey("IdCompetitor")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdClub" }, "fk_TAKMICAR_KLUB1_idx");

                    b.HasIndex(new[] { "IdCategory" }, "fk_competitor_category1_idx");

                    b.ToTable("competitor", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitorEntry", b =>
                {
                    b.Property<int>("EntryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("entryNumber");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EntryNumber"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdCompetition")
                        .HasColumnType("int")
                        .HasColumnName("idCompetition");

                    b.Property<int?>("IdCompetitor")
                        .HasColumnType("int")
                        .HasColumnName("idCompetitor");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("EntryNumber")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EntryNumber" }, "BrojPrijave_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "IdCompetitor" }, "fk_PRIJAVA_NA_TAKMICENJE_TAKMICAR_DISCIPLINA1_idx");

                    b.HasIndex(new[] { "IdUser" }, "fk_PRIJAVA_TAKMICARA_ADMINISTRATOR_KLUBA1_idx");

                    b.HasIndex(new[] { "IdCompetition" }, "fk_PRIJAVA_TAKMICARA_TAKMICENJE1_idx");

                    b.ToTable("competitor_entry", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitorEvent", b =>
                {
                    b.Property<int>("IdCompetitor")
                        .HasColumnType("int")
                        .HasColumnName("idCompetitor");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    b.Property<string>("Result")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("result");

                    b.HasKey("IdCompetitor", "IdEvent")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdEvent" }, "fk_TAKMICAR_DISCIPLINA_DISCIPLINA1_idx");

                    b.ToTable("competitor_event", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("idCategory");

                    b.Property<int>("IdCompetition")
                        .HasColumnType("int")
                        .HasColumnName("idCompetition");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime")
                        .HasColumnName("start");

                    b.HasKey("IdEvent")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCompetition" }, "fk_DISCIPLINA_TAKMICENJE1_idx");

                    b.HasIndex(new[] { "IdCategory" }, "fk_event_category1_idx");

                    b.HasIndex(new[] { "IdEvent" }, "idDiscipline_UNIQUE")
                        .IsUnique();

                    b.ToTable("event", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Group", b =>
                {
                    b.Property<int>("IdGroup")
                        .HasColumnType("int")
                        .HasColumnName("idGroup");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.HasKey("IdGroup")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEvent" }, "fk_GRUPA_TRKACKA_DISCIPLINA1_idx");

                    b.ToTable("group", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.JumpingEvent", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    b.Property<string>("StartHeight")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("startHeight");

                    b.HasKey("IdEvent")
                        .HasName("PRIMARY");

                    b.ToTable("jumping_event", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Location", b =>
                {
                    b.Property<int>("PostNumber")
                        .HasColumnType("int")
                        .HasColumnName("postNumber");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.HasKey("PostNumber")
                        .HasName("PRIMARY");

                    b.ToTable("location", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.RunningEvent", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("int")
                        .HasColumnName("groupNumber");

                    b.HasKey("IdEvent")
                        .HasName("PRIMARY");

                    b.ToTable("running_event", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.ThrowingEvent", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("idEvent");

                    b.Property<string>("Weight")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("weight");

                    b.HasKey("IdEvent")
                        .HasName("PRIMARY");

                    b.ToTable("throwing_event", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("password");

                    b.Property<int>("ThemeID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("type");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("username");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Username" }, "KorisnickoIme_UNIQUE")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("TrackSpace.Models.Club", b =>
                {
                    b.HasOne("TrackSpace.Models.ClubAdmin", "IdUserNavigation")
                        .WithMany("Clubs")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_KLUB_ADMINISTRATOR_KLUBA1");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.ClubAdmin", b =>
                {
                    b.HasOne("TrackSpace.Models.User", "IdUserNavigation")
                        .WithOne("ClubAdmin")
                        .HasForeignKey("TrackSpace.Models.ClubAdmin", "IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_ADMINISTRATOR_KLUBA_KORISNIK");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.Competition", b =>
                {
                    b.HasOne("TrackSpace.Models.CompetitionOrganizer", "IdUserNavigation")
                        .WithMany("Competitions")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_TAKMICENJE_ODGANIZATOR_TAKMICENJA1");

                    b.HasOne("TrackSpace.Models.Location", "PostNumberNavigation")
                        .WithMany("Competitions")
                        .HasForeignKey("PostNumber")
                        .IsRequired()
                        .HasConstraintName("fk_TAKMICENJE_LOKACIJA1");

                    b.Navigation("IdUserNavigation");

                    b.Navigation("PostNumberNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitionOrganizer", b =>
                {
                    b.HasOne("TrackSpace.Models.User", "IdUserNavigation")
                        .WithOne("CompetitionOrganizer")
                        .HasForeignKey("TrackSpace.Models.CompetitionOrganizer", "IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_ODGANIZATOR_TAKMICENJA_KORISNIK1");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.Competitor", b =>
                {
                    b.HasOne("TrackSpace.Models.Category", "IdCategoryNavigation")
                        .WithMany("Competitors")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("fk_competitor_category1");

                    b.HasOne("TrackSpace.Models.Club", "IdClubNavigation")
                        .WithMany("Competitors")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_TAKMICAR_KLUB1");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdClubNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitorEntry", b =>
                {
                    b.HasOne("TrackSpace.Models.Competition", "IdCompetitionNavigation")
                        .WithMany("CompetitorEntries")
                        .HasForeignKey("IdCompetition")
                        .IsRequired()
                        .HasConstraintName("fk_PRIJAVA_TAKMICARA_TAKMICENJE1");

                    b.HasOne("TrackSpace.Models.ClubAdmin", "IdUserNavigation")
                        .WithMany("CompetitorEntries")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("fk_PRIJAVA_TAKMICARA_ADMINISTRATOR_KLUBA1");

                    b.Navigation("IdCompetitionNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitorEvent", b =>
                {
                    b.HasOne("TrackSpace.Models.Competitor", "IdCompetitorNavigation")
                        .WithMany("CompetitorEvents")
                        .HasForeignKey("IdCompetitor")
                        .IsRequired()
                        .HasConstraintName("fk_TAKMICAR_DISCIPLINA_TAKMICAR1");

                    b.HasOne("TrackSpace.Models.Event", "IdEventNavigation")
                        .WithMany("CompetitorEvents")
                        .HasForeignKey("IdEvent")
                        .IsRequired()
                        .HasConstraintName("fk_TAKMICAR_DISCIPLINA_DISCIPLINA1");

                    b.Navigation("IdCompetitorNavigation");

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.Event", b =>
                {
                    b.HasOne("TrackSpace.Models.Category", "IdCategoryNavigation")
                        .WithMany("Events")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("fk_event_category1");

                    b.HasOne("TrackSpace.Models.Competition", "IdCompetitionNavigation")
                        .WithMany("Events")
                        .HasForeignKey("IdCompetition")
                        .IsRequired()
                        .HasConstraintName("fk_DISCIPLINA_TAKMICENJE1");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdCompetitionNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.Group", b =>
                {
                    b.HasOne("TrackSpace.Models.RunningEvent", "IdEventNavigation")
                        .WithMany("Groups")
                        .HasForeignKey("IdEvent")
                        .IsRequired()
                        .HasConstraintName("fk_GRUPA_TRKACKA_DISCIPLINA1");

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.JumpingEvent", b =>
                {
                    b.HasOne("TrackSpace.Models.Event", "IdEventNavigation")
                        .WithOne("JumpingEvent")
                        .HasForeignKey("TrackSpace.Models.JumpingEvent", "IdEvent")
                        .IsRequired()
                        .HasConstraintName("fk_SKAKACKA_DISCIPLINA_DISCIPLINA1");

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.RunningEvent", b =>
                {
                    b.HasOne("TrackSpace.Models.Event", "IdEventNavigation")
                        .WithOne("RunningEvent")
                        .HasForeignKey("TrackSpace.Models.RunningEvent", "IdEvent")
                        .IsRequired()
                        .HasConstraintName("fk_TRKACKA_DISCIPLINA_DISCIPLINA1");

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.ThrowingEvent", b =>
                {
                    b.HasOne("TrackSpace.Models.Event", "IdEventNavigation")
                        .WithOne("ThrowingEvent")
                        .HasForeignKey("TrackSpace.Models.ThrowingEvent", "IdEvent")
                        .IsRequired()
                        .HasConstraintName("fk_BACACKA_DISCIPLINA_DISCIPLINA1");

                    b.Navigation("IdEventNavigation");
                });

            modelBuilder.Entity("TrackSpace.Models.Category", b =>
                {
                    b.Navigation("Competitors");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TrackSpace.Models.Club", b =>
                {
                    b.Navigation("Competitors");
                });

            modelBuilder.Entity("TrackSpace.Models.ClubAdmin", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("CompetitorEntries");
                });

            modelBuilder.Entity("TrackSpace.Models.Competition", b =>
                {
                    b.Navigation("CompetitorEntries");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("TrackSpace.Models.CompetitionOrganizer", b =>
                {
                    b.Navigation("Competitions");
                });

            modelBuilder.Entity("TrackSpace.Models.Competitor", b =>
                {
                    b.Navigation("CompetitorEvents");
                });

            modelBuilder.Entity("TrackSpace.Models.Event", b =>
                {
                    b.Navigation("CompetitorEvents");

                    b.Navigation("JumpingEvent");

                    b.Navigation("RunningEvent");

                    b.Navigation("ThrowingEvent");
                });

            modelBuilder.Entity("TrackSpace.Models.Location", b =>
                {
                    b.Navigation("Competitions");
                });

            modelBuilder.Entity("TrackSpace.Models.RunningEvent", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("TrackSpace.Models.User", b =>
                {
                    b.Navigation("ClubAdmin");

                    b.Navigation("CompetitionOrganizer");
                });
#pragma warning restore 612, 618
        }
    }
}
