<Page x:Class="TrackSpace.Forms.Pages.LoginPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TrackSpace.Forms.Pages"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:utils="clr-namespace:TrackSpace.Utils"
      xmlns:locator="clr-namespace:TrackSpace.ViewModel.Shared"
      mc:Ignorable="d" 
      d:DesignHeight="605" d:DesignWidth="400"
      FontSize="18"
FontFamily="{DynamicResource MaterialDesignFont}"
      DataContext="{Binding Source={x:Static locator:ViewModelLocator.LoginViewModel}}"
      Title="LoginPage">
    <Page.Resources>
        <Style TargetType="Label" x:Key="HoverHighlightLabel">
            <Setter Property="Foreground" Value="#05b790"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Blue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="RoundedButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>
        <Grid>
        
        <Border Grid.Column="1"
    Background="#ffffff"
    CornerRadius="0 10 10 0"
    MouseDown="Border_Mouse_Down"
    >

            <Grid>
                <Button Background="Transparent" BorderBrush="Transparent" Padding="5 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 13 14 0" Command="{Binding CloseFormCommand}">
                    <materialDesign:PackIcon Kind="Close" Width="25" Height="25" Opacity="0.5"/>
                </Button>


                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">

                    <ToggleButton Background="LightGray"
    IsChecked="{Binding IsEnglishChecked, Mode=TwoWay}"
    Style="{StaticResource MaterialDesignActionToggleButton}"
    ToolTip="{DynamicResource switchLanguage}"
    HorizontalAlignment="Right"
    VerticalAlignment="Bottom"
    Width="55" Height="55"
    Margin="0,0,15,14">
                       
                        <ToggleButton.Content>
                            <Image Source="pack://application:,,,/Resources/serbianIcon.png" Width="35" Height="35" />
                        </ToggleButton.Content>
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <Image Source="pack://application:,,,/Resources/englishIcon.png" Width="35" Height="35" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                    </ToggleButton>





                </StackPanel>
              



                <StackPanel VerticalAlignment="Center"
                Margin="75 0">

                    <DockPanel Margin="0,0,0,10">
                        <materialDesign:PackIcon Foreground="#07bf96" Kind="Account" Width="28" Height="28" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <TextBox x:Name="usernameTF" KeyDown="Username_KeyDown" Text="{Binding Username}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="{DynamicResource username}"
                     materialDesign:HintAssist.FloatingOffset="0,-20"
                     BorderBrush="#c5c8cc"
                     BorderThickness="0 0 0 1.5"/>
                    </DockPanel>
                    <DockPanel Margin="0,27,0,50">
                        <materialDesign:PackIcon Foreground="#07bf96" Kind="Lock" Width="28" Height="28" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <PasswordBox x:Name="passwordTF" Style="{StaticResource MaterialDesignRevealPasswordBox}" materialDesign:HintAssist.Hint="{DynamicResource password}" 
                                     PasswordChanged="PasswordBox_PasswordChanged" 
                                     KeyDown="PasswordBox_KeyDown"
                          materialDesign:HintAssist.FloatingOffset="0,-20"
                            BorderBrush="#c5c8cc"
                            BorderThickness="0 0 0 1.5"/>
                    </DockPanel>

                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <Button Margin="0,0,0,30" HorizontalAlignment="Center" Content="{DynamicResource login}"
                    Background="#05b790"
                    Foreground="#ffffff"
                    FontSize="18"
                    Width="180"
                    Height="45"
                    materialDesign:ButtonAssist.CornerRadius="22" Command="{Binding LoginCommand}"></Button>


                        <Label Style="{StaticResource HoverHighlightLabel}" Content="{DynamicResource continueAsObserver}" HorizontalAlignment="Center">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding ShowObserverPageCommand}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Label>

                    </StackPanel>


                </StackPanel>


            </Grid>

        </Border>
    </Grid>
</Page>
